Challenges

    Making framework extendable with third party modules
        Solution:
            Define 3rd party modules as textual widgets.
            Challenge: Importing all widgets in a directory
                Solution:
                    - Make directory a python module by including a __init__.py file
                    - Have __init__.py include all widgets in directory in parent module
                        - https://stackoverflow.com/questions/1057431/how-to-load-all-widgets-in-a-folder
            Challenge: Listing imported widgets
                Solution: 
                    - https://stackoverflow.com/questions/4858100/how-to-list-imported-widgets
            Challenge: Referencing imported widgets
                Solution:
                    - https://stackoverflow.com/questions/17142090/how-to-get-reference-to-module-by-string-name-and-call-its-method-by-string-name
                    - https://www.tutorialspoint.com/How-to-call-a-function-of-a-module-from-a-string-with-the-function-s-name-in-Python-1
            Challenge: Mounting imported widgets
                Solution:
                    - Instantiate widget with module string from imported widgets list using notes above for "Refencing imported widgets"
                    - Mount Instantiated widget.
            Challenge: Linking imported widgets to framework functionality
                Notes:
                    - Widget contains list of database entries it can interact with?
                    - Widget contains list of builtin widgets it can interact with?

    Developing UI
        Challenge: Layout
            - Understanding styling with css
            Notes:
                - https://textual.textualize.io/guide/CSS/
                - https://textual.textualize.io/guide/layout/
                - https://textual.textualize.io/css_types/
                - https://textual.textualize.io/styles/

        Challenge: File_menu
            Challenge: Hiding menu when focus is lost
                Solution:
                    - Have widget send focus lost message
                        - Requires: Extend Button widget to send a message to parent (including copy of button) on loss of focus.
                        Challenge: How to have widget reference itself in focus lost message
                            Solution:
                                - from __future__ import annotations
                                    - https://github.com/python/mypy/issues/3661
            Challenge: Exit functionality
                Solution:
                    - call exit() in on_list_view_selected

        Challenge: Module menu
            Challenge: Listing modules
            Challenge: Calling modules
                Partial Solution:
                    - Extend Vertical with HostContainer
                        - Add add_module function to class
                            - Instantiate new module
                            - mount new module with module_switcher
                            - wait for mount
                            - add new tab to module_tabs
                                - crosslink module and tab ids

        Challenge: Adding new hosts
            Partial Solution:
                - Add host button
                    - makes HostInput widget visible
                - HostInput widget
                    - Window with input for host ip
                    - Enter activates add_host() function and makes widget invisible
                        - Add_host adds appropriate tabs and content pane to host_tabs and host_switcher

        Challenge: tabs
            Solution:
                - Utilize Tabs widget
                Challenge: adding close_tab buttons
                    Problem: Unable to close tabs
                    Solution:
                        - E
                Challenge: adding host_tabcontextual menus
                    Possible Solution:
                        - extending Tab with tab
                Challenge: Automatically switch to newly created tabs.
                    Problem: tabs.add_tab does not activate new tab automatically 
                    Solution:
                        - Extend Tabs with ImprovedTabs
                            - Override add_tab to automaically switch to newly added tab
                                
        Challenge: Content switching
            Solution:
                - Utilize Content-switcher widget
                Challenge: Content panes for newly created tabs not displaying correctly
                    Partial Solution:
                        - Extend Tabs with ImprovedTabs
                            - Modify add_tab to move switching to new tab into aysnc refresh_active() function, forcing it to wait for the content pane to be mounted first.


Textual notes
    - Decent documentation but not widely used
        - very little in the way of searchable help online

Redis Notes:
    Quick=start/basic management
        - https://www.tutorialspoint.com/redis/redis_quick_guide.htm
    Command Lookup
        - https://redis.io/commands/?group=hash
    Redis-py
        - https://github.com/redis/redis-py
    Connection Examples
        - https://redis.readthedocs.io/en/stable/examples.html
    Securing Redis
        - https://redis.io/docs/getting-started/
        - https://redis.io/docs/management/security/
    Persistence
        - https://redis.io/docs/getting-started/
        - https://redis.io/docs/management/persistence/
    Install redis more properly
        - add init script to start redis server? create location to store data?
            - can this be done on application launch?
        - https://redis.io/docs/getting-started/
    Database export/import
        - https://support.huaweicloud.com/intl/en-us/migration-dcs/dcs-migration-0312011.html
    Iterate over Keyspace
        - https://redis.io/commands/scan/

    Redis background:
        - Faq
            - https://redis.io/docs/getting-started/faq/
        - "Using redis"
            - https://redis.io/docs/manual/
    

    